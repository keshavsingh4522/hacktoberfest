import java.util.*;

class Linkedlist
{
	Node first;
	class Node
	{
		Node next;
		int data;
		Node(int d)
		{
			data=d;
			next=null;
		}
		
		
	}
	pq()
	{
		first=null;
	}
	int pop()
	{
		if(first==null)
			return -1;
		int d=first.data;
		Node temp=first;
		first=first.next;
		temp.next=null;
		return d;
	}
	int peek()
	{
		if(first!=null)
		return first.data;
		else
		return -1;

	}
	void push(int d)
	{
		Node temp=first;
		if(temp==null)
		{
			Node insert=new Node(d);
			first=insert;
			return ;
		}
		Node prev=null;
		while(temp!=null && temp.data>=d)
		{
			
			prev=temp;
			temp=temp.next;
		}
		if(prev==null)
		{
			Node insert=new Node(d);
			insert.next=first;
			first=insert;
		}
		else
		{
			Node insert=new Node(d);
			insert.next=temp;
			prev.next=insert;
		
			
		}
		
		
		
		
		
		
	} 
	boolean isEmpty()
	{
		return first==null;
	}
	
}
public class PriorityQueue {

	public static void main(String[] args) {
		 pq pq1=new pq();
		 Scanner sc=new Scanner(System.in);
		 int ch,d;
		 while(true)
		 {
		 System.out.println("Enter 1.To Push an element in priority queue\n 2.To pop an element \n 3.To Exit");
		 ch=sc.nextInt();
		 	switch(ch)
		 	{
		 	case 1: System.out.println("Enter the element\n");
		 			d=sc.nextInt();
		 			pq1.push(d);
		 			System.out.println(d+" pushed\n");
		 			break;
		 	case 2: d=pq1.pop();
		 			if(d==-1)
		 				System.out.println("Queue empty\n");
		 			else
		 				System.out.println(d);
		 			break;
		 	case 3: System.exit(0);
		 	}
		 }
		 

	}

}
