class Solution {
public:
    
    int Partition(vector<int>& nums, int start, int last)
    {
        int pivot=nums[last];
        int partitionIndex=start;
        
        for(int i=start; i<last; i++)
        {
            if(nums[i] <= pivot)
            {
                swap(nums[i], nums[partitionIndex]);
                partitionIndex++;
            }
        }
        swap(nums[partitionIndex], nums[last]);
        
     return partitionIndex;
    }
    
    //Quick Sort 
    void QuickSort(vector<int>& nums, int start, int last) 
    {
       if(start>=last)return;
       int partition=Partition(nums, start, last);
       QuickSort(nums, start, partition-1);
       QuickSort(nums, partition+1, last);
    }
    void sortColors(vector<int>& nums) {
         QuickSort(nums, 0, nums.size()-1);
    }
};
