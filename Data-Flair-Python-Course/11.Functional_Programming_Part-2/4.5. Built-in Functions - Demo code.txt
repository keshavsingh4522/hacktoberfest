abs(-7)

any((0,0))

chr(65)

int('7')

max(2,4,3.3)





#Ones and Zeroes- Write a function that takes in a binary number and determines whether it can arrange it in an alternating pattern of 0’s and 1’s.

def ones_and_zeroes(binary):
	return abs(str(binary).count('0')-str(binary).count('1'))<2


ones_and_zeroes('0110110')

ones_and_zeroes('01101101')

ones_and_zeroes('01100')

ones_and_zeroes('011000')





#Easy Lists- Can you write a function to create a list from a string without using the list() built-in function?

def string_to_list(string):
    mylist=[]
    mylist[:]=string
    return mylist


string_to_list('orange')





#Episodes- Write a function that takes a list of episode numbers, removes duplicates, and sorts them in an ascending order before returning the same.

def show(episodes):
	return sorted(list(set(episodes)))

show([131,137,131,134,130,125,134,131])





#A Number's Rank- Write a function that counts the number of digits in an integer.

def number_rank(num):
	return len(str(num))


number_rank(731)
number_rank(7313)
number_rank(7)